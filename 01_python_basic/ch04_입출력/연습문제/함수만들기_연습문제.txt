[파라미터 O, 리턴 O] (3문제)

1) 1부터 n까지 3의 배수 합 구하기
- 함수 형태: def sum_multiples_of_three(end_number: int) -> int
- 요구사항: 1부터 end_number까지의 정수 중 3의 배수 합계를 계산해 정수로 반환.
- 힌트: 누적 변수 total_sum 사용.

2) 세 정수 중 최댓값 반환
- 함수 형태: def max_of_three(num_a: int, num_b: int, num_c: int) -> int
- 요구사항: if 문만 사용해 최댓값을 찾아 반환(내장 max 사용 금지).
- 힌트: current_max에 하나씩 비교·갱신.

3) 점수에 따른 학점 문자 반환
- 함수 형태: def get_grade_by_score(score: int) -> str
- 요구사항: 90↑ A, 80↑ B, 70↑ C, 60↑ D, 그 외 F 반환.
- 힌트: elif 사다리 구조.


[파라미터 O, 리턴 X] (3문제)

4) 오른쪽 정렬 직각삼각형 별 찍기
- 함수 형태: def print_right_aligned_triangle(height: int) -> None
- 요구사항: 높이 height만큼 공백+별 조합으로 오른쪽 정렬 삼각형 출력.
- 힌트: blank_count = height - row, '*' * row.

5) 아이디/비밀번호 검사 결과 출력
- 함수 형태: def print_login_result(input_username: str, input_password: str) -> None
- 요구사항: 주어진 두 문자열이 사전 정의된 valid_username, valid_password와 모두 일치하면 “로그인 성공”, 아니면 “로그인 실패” 출력.
- 힌트: 논리 AND.

6) 정수 리스트 평균 출력
- 함수 형태: def print_average(scores: list[int]) -> None
- 요구사항: 리스트 scores의 합과 길이로 평균을 계산해 소수 포함하여 출력.
- 힌트: 누적 합 total_score → total_score / len(scores).


[파라미터 X, 리턴 O] (2문제)

7) 사용자 입력으로 삼각형 높이를 받아 마지막 줄 문자열 반환
- 함수 형태: def build_last_triangle_row() -> str
- 요구사항: input()으로 높이 정수 입력을 받고, 그 높이에 해당하는 마지막 줄(예: 높이 5면 "*****") 문자열을 만들어 반환.
- 힌트: '*' * height.

8) 사용자 입력 세 수의 최댓값 반환
- 함수 형태: def input_three_and_get_max() -> int
- 요구사항: input()으로 정수 3개를 받고 if 비교로 최댓값을 찾아 반환.
- 힌트: 비교 갱신 패턴 재사용.


[파라미터 X, 리턴 X] (2문제)

9) 1부터 LIMIT까지 정수 출력
- 함수 형태: def print_numbers_1_to_limit() -> None
- 요구사항: 상수 LIMIT를 정의하고 1부터 LIMIT까지 한 줄에 하나씩 출력.
- 힌트: for number in range(1, LIMIT + 1).

10) 주민등록번호 앞/뒤를 입력받아 성별 출력
- 함수 형태: def print_gender_from_rrn() -> None
- 요구사항: input()으로 “######-#######” 형태 문자열을 받아, 하이픈 뒤 첫 자리(1/3 남성, 2/4 여성 등 기준)는 그대로 두고 단순화해서 1이면 남성, 아니면 여성 규칙으로 출력.
- 힌트: gender_digit = int(rrn[7]), if-else.
